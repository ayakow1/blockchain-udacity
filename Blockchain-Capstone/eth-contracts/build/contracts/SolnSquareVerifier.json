{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x01ffc9a7"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x081812fc"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x27dc297e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2f745c59"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "name": "_result",
          "type": "string"
        },
        {
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x38bbfa50"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x3f4ba83a"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x40c10f19"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x42842e0e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x4f6ccce7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x6352211e"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x8456cb59"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x8da5cb5b"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa22cb465"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xb88d4fde"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xc87b56dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xd547cfb7"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xe985e9c5"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xf2fde38b"
    },
    {
      "inputs": [
        {
          "name": "verifierAddress",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "ad",
          "type": "address"
        }
      ],
      "name": "Solve",
      "type": "event",
      "signature": "0x3df6b522eef67da754a6005553d519aa545c4394f4f8a0d60cb4312a14133e52"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event",
      "signature": "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event",
      "signature": "0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event",
      "signature": "0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "TransferOwnership",
      "type": "event",
      "signature": "0x5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "components": [
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "a",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256[2]"
                },
                {
                  "name": "Y",
                  "type": "uint256[2]"
                }
              ],
              "name": "b",
              "type": "tuple"
            },
            {
              "components": [
                {
                  "name": "X",
                  "type": "uint256"
                },
                {
                  "name": "Y",
                  "type": "uint256"
                }
              ],
              "name": "c",
              "type": "tuple"
            }
          ],
          "name": "proof",
          "type": "tuple"
        },
        {
          "name": "input",
          "type": "uint256[1]"
        }
      ],
      "name": "mintNewNFT",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xdbf45a44"
    }
  ],
  "bytecode": "0x608060405260006014553480156200001657600080fd5b5060405160208062003db68339810180604052620000389190810190620004a2565b6040805190810160405280600d81526020017f4a6f6527732044726177696e67000000000000000000000000000000000000008152506040805190810160405280600381526020017f5043540000000000000000000000000000000000000000000000000000000000815250606060405190810160405280603f815260200162003d77603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a360008060146101000a81548160ff021916908315150217905550620001d26301ffc9a77c0100000000000000000000000000000000000000000000000000000000026200031f640100000000026401000000009004565b6200020f6380ac58cd7c0100000000000000000000000000000000000000000000000000000000026200031f640100000000026401000000009004565b6200024c63780e9d637c0100000000000000000000000000000000000000000000000000000000026200031f640100000000026401000000009004565b82600f908051906020019062000264929190620003dd565b5081601090805190602001906200027d929190620003dd565b50806011908051906020019062000296929190620003dd565b50620002d4635b5e139f7c0100000000000000000000000000000000000000000000000000000000026200031f640100000000026401000000009004565b50505080601360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000502565b63ffffffff7c010000000000000000000000000000000000000000000000000000000002817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916141515156200037157600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200042057805160ff191683800117855562000451565b8280016001018555821562000451579182015b828111156200045057825182559160200191906001019062000433565b5b50905062000460919062000464565b5090565b6200048991905b80821115620004855760008160009055506001016200046b565b5090565b90565b60006200049a8251620004ee565b905092915050565b600060208284031215620004b557600080fd5b6000620004c5848285016200048c565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620004fb82620004ce565b9050919050565b61386580620005126000396000f3fe608060405234801561001057600080fd5b5060043610610190576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce7116100fb578063a22cb465116100b4578063d547cfb71161008e578063d547cfb714610465578063dbf45a4414610483578063e985e9c51461049f578063f2fde38b146104cf57610190565b8063a22cb465146103fd578063b88d4fde14610419578063c87b56dd1461043557610190565b80634f6ccce7146103275780636352211e1461035757806370a08231146103875780638456cb59146103b75780638da5cb5b146103c157806395d89b41146103df57610190565b806327dc297e1161014d57806327dc297e146102695780632f745c591461028557806338bbfa50146102b55780633f4ba83a146102d157806340c10f19146102db57806342842e0e1461030b57610190565b806301ffc9a71461019557806306fdde03146101c5578063081812fc146101e3578063095ea7b31461021357806318160ddd1461022f57806323b872dd1461024d575b600080fd5b6101af60048036036101aa9190810190612e6e565b6104eb565b6040516101bc91906133cd565b60405180910390f35b6101cd610553565b6040516101da91906133e8565b60405180910390f35b6101fd60048036036101f89190810190612ec0565b6105f5565b60405161020a919061334b565b60405180910390f35b61022d60048036036102289190810190612cd1565b610632565b005b6102376107e3565b6040516102449190613595565b60405180910390f35b61026760048036036102629190810190612bcb565b6107f0565b005b610283600480360361027e9190810190612d9b565b61084b565b005b61029f600480360361029a9190810190612cd1565b61088e565b6040516102ac9190613595565b60405180910390f35b6102cf60048036036102ca9190810190612def565b610905565b005b6102d961090a565b005b6102f560048036036102f09190810190612cd1565b6109f6565b60405161030291906133cd565b60405180910390f35b61032560048036036103209190810190612bcb565b610aa6565b005b610341600480360361033c9190810190612ec0565b610ac7565b60405161034e9190613595565b60405180910390f35b610371600480360361036c9190810190612ec0565b610aff565b60405161037e919061334b565b60405180910390f35b6103a1600480360361039c9190810190612b66565b610b3c565b6040516103ae9190613595565b60405180910390f35b6103bf610b8c565b005b6103c9610c79565b6040516103d6919061334b565b60405180910390f35b6103e7610ca2565b6040516103f491906133e8565b60405180910390f35b61041760048036036104129190810190612c95565b610d44565b005b610433600480360361042e9190810190612c1a565b610e7c565b005b61044f600480360361044a9190810190612ec0565b610ea4565b60405161045c91906133e8565b60405180910390f35b61046d610f6d565b60405161047a91906133e8565b60405180910390f35b61049d60048036036104989190810190612d0d565b61100f565b005b6104b960048036036104b49190810190612b8f565b6112df565b6040516104c691906133cd565b60405180910390f35b6104e960048036036104e49190810190612b66565b611373565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105eb5780601f106105c0576101008083540402835291602001916105eb565b820191906000526020600020905b8154815290600101906020018083116105ce57829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061063d82610aff565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a79061352a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106f057506106ef81336112df565b5b1515610731576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107289061350a565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6107fa3382611410565b151561083b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108329061340a565b60405180910390fd5b6108468383836114a5565b505050565b61088a828260006040519080825280601f01601f1916602001820160405280156108845781602001600182028038833980820191505090505b50610905565b5050565b600061089983610b3c565b821015156108a657600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156108f257fe5b9060005260206000200154905092915050565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561099b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610992906134aa565b60405180910390fd5b6109a36114c9565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516109ec9190613366565b60405180910390a1565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a80906134aa565b60405180910390fd5b610a93838361151c565b610a9c8261153d565b6001905092915050565b610ac28383836020604051908101604052806000815250610e7c565b505050565b6000610ad16107e3565b82101515610ade57600080fd5b600882815481101515610aed57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b85600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061162d565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c14906134aa565b60405180910390fd5b610c2561163b565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610c6f9190613366565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3a5780601f10610d0f57610100808354040283529160200191610d3a565b820191906000526020600020905b815481529060010190602001808311610d1d57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d7f57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e7091906133cd565b60405180910390a35050565b610e878484846107f0565b610e938484848461168f565b1515610e9e57600080fd5b50505050565b6060610eaf826117e0565b1515610eba57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f615780601f10610f3657610100808354040283529160200191610f61565b820191906000526020600020905b815481529060010190602001808311610f4457829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110055780601f10610fda57610100808354040283529160200191611005565b820191906000526020600020905b815481529060010190602001808311610fe857829003601f168201915b5050505050905090565b6000826000015160000151836000015160200151846020015160000151856020015160200151866040015160000151876040015160200151876040516020018088815260200187815260200186600260200280838360005b83811015611082578082015181840152602081019050611067565b5050505090500185600260200280838360005b838110156110b0578082015181840152602081019050611095565b5050505090500184815260200183815260200182600160200280838360005b838110156110ea5780820151818401526020810190506110cf565b50505050905001975050505050505050604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156111b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b09061354a565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f48d772984846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161123292919061356a565b60206040518083038186803b15801561124a57600080fd5b505afa15801561125e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112829190810190612d72565b15156112c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ba9061346a565b60405180910390fd5b6112cd8186611852565b6112d785856109f6565b505050505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fb906134aa565b60405180910390fd5b61140d81611941565b50565b60008061141c83610aff565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061148b57508373ffffffffffffffffffffffffffffffffffffffff16611473846105f5565b73ffffffffffffffffffffffffffffffffffffffff16145b8061149c575061149b81856112df565b5b91505092915050565b6114b0838383611a3b565b6114ba8382611c74565b6114c48282611e18565b505050565b600060149054906101000a900460ff16151561151a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115119061342a565b60405180910390fd5b565b6115268282611edf565b6115308282611e18565b61153981612022565b5050565b611546816117e0565b151561155157600080fd5b60606115ff60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115ec5780601f106115c1576101008083540402835291602001916115ec565b820191906000526020600020905b8154815290600101906020018083116115cf57829003601f168201915b50505050506115fa8461206e565b6121c7565b905080601260008481526020019081526020016000209080519060200190611628929190612778565b505050565b600081600001549050919050565b600060149054906101000a900460ff1615151561168d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611684906134ca565b60405180910390fd5b565b60006116b08473ffffffffffffffffffffffffffffffffffffffff1661220e565b15156116bf57600190506117d8565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161171c9493929190613381565b602060405180830381600087803b15801561173657600080fd5b505af115801561174a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061176e9190810190612e97565b905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b611868600160145461222190919063ffffffff16565b601481905550604080519081016040528060145481526020018273ffffffffffffffffffffffffffffffffffffffff16815250601560008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f3df6b522eef67da754a6005553d519aa545c4394f4f8a0d60cb4312a14133e52601454826040516119359291906135b0565b60405180910390a15050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561197d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611a4682610aff565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515611ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aaf9061344a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b21906134ea565b60405180910390fd5b611b3382612242565b611b7a600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612302565b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c13600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612325565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000611ccc6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061233b90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515611dbf576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611d3d57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611d9757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611e1191906127f8565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611ee8816117e0565b151515611f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f219061348a565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fc3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612325565b808273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156120b6576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506121c2565b600082905060005b6000821415156120e4578080600101915050600a828115156120dc57fe5b0491506120be565b6060816040519080825280601f01601f1916602001820160405280156121195781602001600182028038833980820191505090505b50905060006001830390505b6000861415156121ba57600a8681151561213b57fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561217657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868115156121b257fe5b049550612125565b819450505050505b919050565b6060612206838360206040519081016040528060008152506020604051908101604052806000815250602060405190810160405280600081525061235d565b905092915050565b600080823b905060008111915050919050565b600080828401905083811015151561223857600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156122ff5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61231a6001826000015461233b90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115151561234c57600080fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156123b95781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156124835788818151811015156123e757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561244657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123d0565b600090505b875181101561253b57878181518110151561249f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156124fe57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612488565b600090505b86518110156125f357868181518110151561255757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156125b657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612540565b600090505b85518110156126ab57858181518110151561260f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561266e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125f8565b600090505b84518110156127635784818151811015156126c757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561272657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506126b0565b82995050505050505050505095945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106127b957805160ff19168380011785556127e7565b828001600101855582156127e7579182015b828111156127e65782518255916020019190600101906127cb565b5b5090506127f49190612824565b5090565b81548183558181111561281f5781836000526020600020918201910161281e9190612824565b5b505050565b61284691905b8082111561284257600081600090555060010161282a565b5090565b90565b60006128558235613744565b905092915050565b600082601f830112151561287057600080fd5b600161288361287e82613606565b6135d9565b9150818385602084028201111561289957600080fd5b60005b838110156128c957816128af8882612b52565b84526020840193506020830192505060018101905061289c565b5050505092915050565b600082601f83011215156128e657600080fd5b60026128f96128f482613628565b6135d9565b9150818385602084028201111561290f57600080fd5b60005b8381101561293f57816129258882612b52565b845260208401935060208301925050600181019050612912565b5050505092915050565b60006129558235613756565b905092915050565b60006129698251613756565b905092915050565b600061297d8235613762565b905092915050565b6000612991823561376c565b905092915050565b60006129a5825161376c565b905092915050565b600082601f83011215156129c057600080fd5b81356129d36129ce8261364a565b6135d9565b915080825260208301602083018583830111156129ef57600080fd5b6129fa8382846137d8565b50505092915050565b600082601f8301121515612a1657600080fd5b8135612a29612a2482613676565b6135d9565b91508082526020830160208301858383011115612a4557600080fd5b612a508382846137d8565b50505092915050565b600060408284031215612a6b57600080fd5b612a7560406135d9565b90506000612a8584828501612b52565b6000830152506020612a9984828501612b52565b60208301525092915050565b600060808284031215612ab757600080fd5b612ac160406135d9565b90506000612ad1848285016128d3565b6000830152506040612ae5848285016128d3565b60208301525092915050565b60006101008284031215612b0457600080fd5b612b0e60606135d9565b90506000612b1e84828501612a59565b6000830152506040612b3284828501612aa5565b60208301525060c0612b4684828501612a59565b60408301525092915050565b6000612b5e8235613798565b905092915050565b600060208284031215612b7857600080fd5b6000612b8684828501612849565b91505092915050565b60008060408385031215612ba257600080fd5b6000612bb085828601612849565b9250506020612bc185828601612849565b9150509250929050565b600080600060608486031215612be057600080fd5b6000612bee86828701612849565b9350506020612bff86828701612849565b9250506040612c1086828701612b52565b9150509250925092565b60008060008060808587031215612c3057600080fd5b6000612c3e87828801612849565b9450506020612c4f87828801612849565b9350506040612c6087828801612b52565b925050606085013567ffffffffffffffff811115612c7d57600080fd5b612c89878288016129ad565b91505092959194509250565b60008060408385031215612ca857600080fd5b6000612cb685828601612849565b9250506020612cc785828601612949565b9150509250929050565b60008060408385031215612ce457600080fd5b6000612cf285828601612849565b9250506020612d0385828601612b52565b9150509250929050565b6000806000806101608587031215612d2457600080fd5b6000612d3287828801612849565b9450506020612d4387828801612b52565b9350506040612d5487828801612af1565b925050610140612d668782880161285d565b91505092959194509250565b600060208284031215612d8457600080fd5b6000612d928482850161295d565b91505092915050565b60008060408385031215612dae57600080fd5b6000612dbc85828601612971565b925050602083013567ffffffffffffffff811115612dd957600080fd5b612de585828601612a03565b9150509250929050565b600080600060608486031215612e0457600080fd5b6000612e1286828701612971565b935050602084013567ffffffffffffffff811115612e2f57600080fd5b612e3b86828701612a03565b925050604084013567ffffffffffffffff811115612e5857600080fd5b612e64868287016129ad565b9150509250925092565b600060208284031215612e8057600080fd5b6000612e8e84828501612985565b91505092915050565b600060208284031215612ea957600080fd5b6000612eb784828501612999565b91505092915050565b600060208284031215612ed257600080fd5b6000612ee084828501612b52565b91505092915050565b612ef2816137a2565b82525050565b612f01816136fc565b82525050565b612f10816136b6565b612f19826136a2565b60005b82811015612f4b57612f2f85835161333c565b612f38826136e2565b9150602085019450600181019050612f1c565b5050505050565b612f5b816136c1565b612f64826136ac565b60005b82811015612f9657612f7a85835161333c565b612f83826136ef565b9150602085019450600181019050612f67565b5050505050565b612fa68161370e565b82525050565b6000612fb7826136cc565b808452612fcb8160208601602086016137e7565b612fd48161381a565b602085010191505092915050565b6000612fed826136d7565b8084526130018160208601602086016137e7565b61300a8161381a565b602085010191505092915050565b6000601282527f4e6f7420617070726f766564206f776e657200000000000000000000000000006020830152604082019050919050565b6000601482527f5061757361626c653a206e6f74207061757365640000000000000000000000006020830152604082019050919050565b6000601482527f66726f6d2073686f756c64206265206f776e65720000000000000000000000006020830152604082019050919050565b6000600a82527f6e6f742070726f766564000000000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f416c7265616479206578697374730000000000000000000000000000000000006020830152604082019050919050565b6000601582527f4f6e6c79206f776e657220697320616c6c6f77656400000000000000000000006020830152604082019050919050565b6000601082527f5061757361626c653a20706175736564000000000000000000000000000000006020830152604082019050919050565b6000601182527f6e6f742076616c696420616464726573730000000000000000000000000000006020830152604082019050919050565b6000601582527f73656e646572206e6f7420617574686f72697a656400000000000000000000006020830152604082019050919050565b6000602682527f6164647265737320657175616c7320746f20746865206f776e6572206f66207460208301527f6f6b656e494400000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000600c82527f616c7265616479207573656400000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516132b1600085018261333c565b5060208201516132c4602085018261333c565b50505050565b6080820160008201516132e06000850182612f52565b5060208201516132f36040850182612f52565b50505050565b61010082016000820151613310600085018261329b565b50602082015161332360408501826132ca565b50604082015161333660c085018261329b565b50505050565b6133458161373a565b82525050565b60006020820190506133606000830184612ef8565b92915050565b600060208201905061337b6000830184612ee9565b92915050565b60006080820190506133966000830187612ee9565b6133a36020830186612ef8565b6133b0604083018561333c565b81810360608301526133c28184612fac565b905095945050505050565b60006020820190506133e26000830184612f9d565b92915050565b600060208201905081810360008301526134028184612fe2565b905092915050565b6000602082019050818103600083015261342381613018565b9050919050565b600060208201905081810360008301526134438161304f565b9050919050565b6000602082019050818103600083015261346381613086565b9050919050565b60006020820190508181036000830152613483816130bd565b9050919050565b600060208201905081810360008301526134a3816130f4565b9050919050565b600060208201905081810360008301526134c38161312b565b9050919050565b600060208201905081810360008301526134e381613162565b9050919050565b6000602082019050818103600083015261350381613199565b9050919050565b60006020820190508181036000830152613523816131d0565b9050919050565b6000602082019050818103600083015261354381613207565b9050919050565b6000602082019050818103600083015261356381613264565b9050919050565b60006101208201905061358060008301856132f9565b61358e610100830184612f07565b9392505050565b60006020820190506135aa600083018461333c565b92915050565b60006040820190506135c5600083018561333c565b6135d26020830184612ef8565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156135fc57600080fd5b8060405250919050565b600067ffffffffffffffff82111561361d57600080fd5b602082029050919050565b600067ffffffffffffffff82111561363f57600080fd5b602082029050919050565b600067ffffffffffffffff82111561366157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561368d57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060019050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b60006137078261371a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061374f8261371a565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60006137ad826137b4565b9050919050565b60006137bf826137c6565b9050919050565b60006137d18261371a565b9050919050565b82818337600083830152505050565b60005b838110156138055780820151818401526020810190506137ea565b83811115613814576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820c6134ab97f98881457bfee5b68006f6568870e66c66926dea94ea660160afb396c6578706572696d656e74616cf5003768747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b5060043610610190576000357c0100000000000000000000000000000000000000000000000000000000900480634f6ccce7116100fb578063a22cb465116100b4578063d547cfb71161008e578063d547cfb714610465578063dbf45a4414610483578063e985e9c51461049f578063f2fde38b146104cf57610190565b8063a22cb465146103fd578063b88d4fde14610419578063c87b56dd1461043557610190565b80634f6ccce7146103275780636352211e1461035757806370a08231146103875780638456cb59146103b75780638da5cb5b146103c157806395d89b41146103df57610190565b806327dc297e1161014d57806327dc297e146102695780632f745c591461028557806338bbfa50146102b55780633f4ba83a146102d157806340c10f19146102db57806342842e0e1461030b57610190565b806301ffc9a71461019557806306fdde03146101c5578063081812fc146101e3578063095ea7b31461021357806318160ddd1461022f57806323b872dd1461024d575b600080fd5b6101af60048036036101aa9190810190612e6e565b6104eb565b6040516101bc91906133cd565b60405180910390f35b6101cd610553565b6040516101da91906133e8565b60405180910390f35b6101fd60048036036101f89190810190612ec0565b6105f5565b60405161020a919061334b565b60405180910390f35b61022d60048036036102289190810190612cd1565b610632565b005b6102376107e3565b6040516102449190613595565b60405180910390f35b61026760048036036102629190810190612bcb565b6107f0565b005b610283600480360361027e9190810190612d9b565b61084b565b005b61029f600480360361029a9190810190612cd1565b61088e565b6040516102ac9190613595565b60405180910390f35b6102cf60048036036102ca9190810190612def565b610905565b005b6102d961090a565b005b6102f560048036036102f09190810190612cd1565b6109f6565b60405161030291906133cd565b60405180910390f35b61032560048036036103209190810190612bcb565b610aa6565b005b610341600480360361033c9190810190612ec0565b610ac7565b60405161034e9190613595565b60405180910390f35b610371600480360361036c9190810190612ec0565b610aff565b60405161037e919061334b565b60405180910390f35b6103a1600480360361039c9190810190612b66565b610b3c565b6040516103ae9190613595565b60405180910390f35b6103bf610b8c565b005b6103c9610c79565b6040516103d6919061334b565b60405180910390f35b6103e7610ca2565b6040516103f491906133e8565b60405180910390f35b61041760048036036104129190810190612c95565b610d44565b005b610433600480360361042e9190810190612c1a565b610e7c565b005b61044f600480360361044a9190810190612ec0565b610ea4565b60405161045c91906133e8565b60405180910390f35b61046d610f6d565b60405161047a91906133e8565b60405180910390f35b61049d60048036036104989190810190612d0d565b61100f565b005b6104b960048036036104b49190810190612b8f565b6112df565b6040516104c691906133cd565b60405180910390f35b6104e960048036036104e49190810190612b66565b611373565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105eb5780601f106105c0576101008083540402835291602001916105eb565b820191906000526020600020905b8154815290600101906020018083116105ce57829003601f168201915b5050505050905090565b60006003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600061063d82610aff565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156106b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a79061352a565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806106f057506106ef81336112df565b5b1515610731576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107289061350a565b60405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000600880549050905090565b6107fa3382611410565b151561083b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108329061340a565b60405180910390fd5b6108468383836114a5565b505050565b61088a828260006040519080825280601f01601f1916602001820160405280156108845781602001600182028038833980820191505090505b50610905565b5050565b600061089983610b3c565b821015156108a657600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811015156108f257fe5b9060005260206000200154905092915050565b505050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561099b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610992906134aa565b60405180910390fd5b6109a36114c9565b60008060146101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336040516109ec9190613366565b60405180910390a1565b60003373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610a89576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a80906134aa565b60405180910390fd5b610a93838361151c565b610a9c8261153d565b6001905092915050565b610ac28383836020604051908101604052806000815250610e7c565b505050565b6000610ad16107e3565b82101515610ade57600080fd5b600882815481101515610aed57fe5b90600052602060002001549050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610b85600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002061162d565b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515610c1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c14906134aa565b60405180910390fd5b610c2561163b565b6001600060146101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051610c6f9190613366565b60405180910390a1565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610d3a5780601f10610d0f57610100808354040283529160200191610d3a565b820191906000526020600020905b815481529060010190602001808311610d1d57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610d7f57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610e7091906133cd565b60405180910390a35050565b610e878484846107f0565b610e938484848461168f565b1515610e9e57600080fd5b50505050565b6060610eaf826117e0565b1515610eba57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610f615780601f10610f3657610100808354040283529160200191610f61565b820191906000526020600020905b815481529060010190602001808311610f4457829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110055780601f10610fda57610100808354040283529160200191611005565b820191906000526020600020905b815481529060010190602001808311610fe857829003601f168201915b5050505050905090565b6000826000015160000151836000015160200151846020015160000151856020015160200151866040015160000151876040015160200151876040516020018088815260200187815260200186600260200280838360005b83811015611082578082015181840152602081019050611067565b5050505090500185600260200280838360005b838110156110b0578082015181840152602081019050611095565b5050505090500184815260200183815260200182600160200280838360005b838110156110ea5780820151818401526020810190506110cf565b50505050905001975050505050505050604051602081830303815290604052805190602001209050600073ffffffffffffffffffffffffffffffffffffffff166015600083815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156111b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b09061354a565b60405180910390fd5b601360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f48d772984846040518363ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161123292919061356a565b60206040518083038186803b15801561124a57600080fd5b505afa15801561125e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052506112829190810190612d72565b15156112c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ba9061346a565b60405180910390fd5b6112cd8186611852565b6112d785856109f6565b505050505050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b3373ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16141515611404576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113fb906134aa565b60405180910390fd5b61140d81611941565b50565b60008061141c83610aff565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061148b57508373ffffffffffffffffffffffffffffffffffffffff16611473846105f5565b73ffffffffffffffffffffffffffffffffffffffff16145b8061149c575061149b81856112df565b5b91505092915050565b6114b0838383611a3b565b6114ba8382611c74565b6114c48282611e18565b505050565b600060149054906101000a900460ff16151561151a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115119061342a565b60405180910390fd5b565b6115268282611edf565b6115308282611e18565b61153981612022565b5050565b611546816117e0565b151561155157600080fd5b60606115ff60118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156115ec5780601f106115c1576101008083540402835291602001916115ec565b820191906000526020600020905b8154815290600101906020018083116115cf57829003601f168201915b50505050506115fa8461206e565b6121c7565b905080601260008481526020019081526020016000209080519060200190611628929190612778565b505050565b600081600001549050919050565b600060149054906101000a900460ff1615151561168d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611684906134ca565b60405180910390fd5b565b60006116b08473ffffffffffffffffffffffffffffffffffffffff1661220e565b15156116bf57600190506117d8565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff167c010000000000000000000000000000000000000000000000000000000002815260040161171c9493929190613381565b602060405180830381600087803b15801561173657600080fd5b505af115801561174a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525061176e9190810190612e97565b905063150b7a027c0100000000000000000000000000000000000000000000000000000000027bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b611868600160145461222190919063ffffffff16565b601481905550604080519081016040528060145481526020018273ffffffffffffffffffffffffffffffffffffffff16815250601560008481526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509050507f3df6b522eef67da754a6005553d519aa545c4394f4f8a0d60cb4312a14133e52601454826040516119359291906135b0565b60405180910390a15050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561197d57600080fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f5c486528ec3e3f0ea91181cff8116f02bfa350e03b8b6f12e00765adbb5af85c60405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000611a4682610aff565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16141515611ab8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611aaf9061344a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614151515611b2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b21906134ea565b60405180910390fd5b611b3382612242565b611b7a600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612302565b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611c13600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612325565b818373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a450505050565b6000611ccc6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905061233b90919063ffffffff16565b90506000600760008481526020019081526020016000205490508181141515611dbf576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611d3d57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002083815481101515611d9757fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480919060019003611e1191906127f8565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b611ee8816117e0565b151515611f2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f219061348a565b60405180910390fd5b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550611fc3600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612325565b808273ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b606060008214156120b6576040805190810160405280600181526020017f300000000000000000000000000000000000000000000000000000000000000081525090506121c2565b600082905060005b6000821415156120e4578080600101915050600a828115156120dc57fe5b0491506120be565b6060816040519080825280601f01601f1916602001820160405280156121195781602001600182028038833980820191505090505b50905060006001830390505b6000861415156121ba57600a8681151561213b57fe5b066030017f01000000000000000000000000000000000000000000000000000000000000000282828060019003935081518110151561217657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868115156121b257fe5b049550612125565b819450505050505b919050565b6060612206838360206040519081016040528060008152506020604051908101604052806000815250602060405190810160405280600081525061235d565b905092915050565b600080823b905060008111915050919050565b600080828401905083811015151561223857600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff166003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415156122ff5760006003600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61231a6001826000015461233b90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b600082821115151561234c57600080fd5b600082840390508091505092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f1916602001820160405280156123b95781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b88518110156124835788818151811015156123e757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561244657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506123d0565b600090505b875181101561253b57878181518110151561249f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156124fe57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612488565b600090505b86518110156125f357868181518110151561255757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f01000000000000000000000000000000000000000000000000000000000000000283838060010194508151811015156125b657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050612540565b600090505b85518110156126ab57858181518110151561260f57fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561266e57fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506125f8565b600090505b84518110156127635784818151811015156126c757fe5b9060200101517f010000000000000000000000000000000000000000000000000000000000000090047f010000000000000000000000000000000000000000000000000000000000000002838380600101945081518110151561272657fe5b9060200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535080806001019150506126b0565b82995050505050505050505095945050505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106127b957805160ff19168380011785556127e7565b828001600101855582156127e7579182015b828111156127e65782518255916020019190600101906127cb565b5b5090506127f49190612824565b5090565b81548183558181111561281f5781836000526020600020918201910161281e9190612824565b5b505050565b61284691905b8082111561284257600081600090555060010161282a565b5090565b90565b60006128558235613744565b905092915050565b600082601f830112151561287057600080fd5b600161288361287e82613606565b6135d9565b9150818385602084028201111561289957600080fd5b60005b838110156128c957816128af8882612b52565b84526020840193506020830192505060018101905061289c565b5050505092915050565b600082601f83011215156128e657600080fd5b60026128f96128f482613628565b6135d9565b9150818385602084028201111561290f57600080fd5b60005b8381101561293f57816129258882612b52565b845260208401935060208301925050600181019050612912565b5050505092915050565b60006129558235613756565b905092915050565b60006129698251613756565b905092915050565b600061297d8235613762565b905092915050565b6000612991823561376c565b905092915050565b60006129a5825161376c565b905092915050565b600082601f83011215156129c057600080fd5b81356129d36129ce8261364a565b6135d9565b915080825260208301602083018583830111156129ef57600080fd5b6129fa8382846137d8565b50505092915050565b600082601f8301121515612a1657600080fd5b8135612a29612a2482613676565b6135d9565b91508082526020830160208301858383011115612a4557600080fd5b612a508382846137d8565b50505092915050565b600060408284031215612a6b57600080fd5b612a7560406135d9565b90506000612a8584828501612b52565b6000830152506020612a9984828501612b52565b60208301525092915050565b600060808284031215612ab757600080fd5b612ac160406135d9565b90506000612ad1848285016128d3565b6000830152506040612ae5848285016128d3565b60208301525092915050565b60006101008284031215612b0457600080fd5b612b0e60606135d9565b90506000612b1e84828501612a59565b6000830152506040612b3284828501612aa5565b60208301525060c0612b4684828501612a59565b60408301525092915050565b6000612b5e8235613798565b905092915050565b600060208284031215612b7857600080fd5b6000612b8684828501612849565b91505092915050565b60008060408385031215612ba257600080fd5b6000612bb085828601612849565b9250506020612bc185828601612849565b9150509250929050565b600080600060608486031215612be057600080fd5b6000612bee86828701612849565b9350506020612bff86828701612849565b9250506040612c1086828701612b52565b9150509250925092565b60008060008060808587031215612c3057600080fd5b6000612c3e87828801612849565b9450506020612c4f87828801612849565b9350506040612c6087828801612b52565b925050606085013567ffffffffffffffff811115612c7d57600080fd5b612c89878288016129ad565b91505092959194509250565b60008060408385031215612ca857600080fd5b6000612cb685828601612849565b9250506020612cc785828601612949565b9150509250929050565b60008060408385031215612ce457600080fd5b6000612cf285828601612849565b9250506020612d0385828601612b52565b9150509250929050565b6000806000806101608587031215612d2457600080fd5b6000612d3287828801612849565b9450506020612d4387828801612b52565b9350506040612d5487828801612af1565b925050610140612d668782880161285d565b91505092959194509250565b600060208284031215612d8457600080fd5b6000612d928482850161295d565b91505092915050565b60008060408385031215612dae57600080fd5b6000612dbc85828601612971565b925050602083013567ffffffffffffffff811115612dd957600080fd5b612de585828601612a03565b9150509250929050565b600080600060608486031215612e0457600080fd5b6000612e1286828701612971565b935050602084013567ffffffffffffffff811115612e2f57600080fd5b612e3b86828701612a03565b925050604084013567ffffffffffffffff811115612e5857600080fd5b612e64868287016129ad565b9150509250925092565b600060208284031215612e8057600080fd5b6000612e8e84828501612985565b91505092915050565b600060208284031215612ea957600080fd5b6000612eb784828501612999565b91505092915050565b600060208284031215612ed257600080fd5b6000612ee084828501612b52565b91505092915050565b612ef2816137a2565b82525050565b612f01816136fc565b82525050565b612f10816136b6565b612f19826136a2565b60005b82811015612f4b57612f2f85835161333c565b612f38826136e2565b9150602085019450600181019050612f1c565b5050505050565b612f5b816136c1565b612f64826136ac565b60005b82811015612f9657612f7a85835161333c565b612f83826136ef565b9150602085019450600181019050612f67565b5050505050565b612fa68161370e565b82525050565b6000612fb7826136cc565b808452612fcb8160208601602086016137e7565b612fd48161381a565b602085010191505092915050565b6000612fed826136d7565b8084526130018160208601602086016137e7565b61300a8161381a565b602085010191505092915050565b6000601282527f4e6f7420617070726f766564206f776e657200000000000000000000000000006020830152604082019050919050565b6000601482527f5061757361626c653a206e6f74207061757365640000000000000000000000006020830152604082019050919050565b6000601482527f66726f6d2073686f756c64206265206f776e65720000000000000000000000006020830152604082019050919050565b6000600a82527f6e6f742070726f766564000000000000000000000000000000000000000000006020830152604082019050919050565b6000600e82527f416c7265616479206578697374730000000000000000000000000000000000006020830152604082019050919050565b6000601582527f4f6e6c79206f776e657220697320616c6c6f77656400000000000000000000006020830152604082019050919050565b6000601082527f5061757361626c653a20706175736564000000000000000000000000000000006020830152604082019050919050565b6000601182527f6e6f742076616c696420616464726573730000000000000000000000000000006020830152604082019050919050565b6000601582527f73656e646572206e6f7420617574686f72697a656400000000000000000000006020830152604082019050919050565b6000602682527f6164647265737320657175616c7320746f20746865206f776e6572206f66207460208301527f6f6b656e494400000000000000000000000000000000000000000000000000006040830152606082019050919050565b6000600c82527f616c7265616479207573656400000000000000000000000000000000000000006020830152604082019050919050565b6040820160008201516132b1600085018261333c565b5060208201516132c4602085018261333c565b50505050565b6080820160008201516132e06000850182612f52565b5060208201516132f36040850182612f52565b50505050565b61010082016000820151613310600085018261329b565b50602082015161332360408501826132ca565b50604082015161333660c085018261329b565b50505050565b6133458161373a565b82525050565b60006020820190506133606000830184612ef8565b92915050565b600060208201905061337b6000830184612ee9565b92915050565b60006080820190506133966000830187612ee9565b6133a36020830186612ef8565b6133b0604083018561333c565b81810360608301526133c28184612fac565b905095945050505050565b60006020820190506133e26000830184612f9d565b92915050565b600060208201905081810360008301526134028184612fe2565b905092915050565b6000602082019050818103600083015261342381613018565b9050919050565b600060208201905081810360008301526134438161304f565b9050919050565b6000602082019050818103600083015261346381613086565b9050919050565b60006020820190508181036000830152613483816130bd565b9050919050565b600060208201905081810360008301526134a3816130f4565b9050919050565b600060208201905081810360008301526134c38161312b565b9050919050565b600060208201905081810360008301526134e381613162565b9050919050565b6000602082019050818103600083015261350381613199565b9050919050565b60006020820190508181036000830152613523816131d0565b9050919050565b6000602082019050818103600083015261354381613207565b9050919050565b6000602082019050818103600083015261356381613264565b9050919050565b60006101208201905061358060008301856132f9565b61358e610100830184612f07565b9392505050565b60006020820190506135aa600083018461333c565b92915050565b60006040820190506135c5600083018561333c565b6135d26020830184612ef8565b9392505050565b6000604051905081810181811067ffffffffffffffff821117156135fc57600080fd5b8060405250919050565b600067ffffffffffffffff82111561361d57600080fd5b602082029050919050565b600067ffffffffffffffff82111561363f57600080fd5b602082029050919050565b600067ffffffffffffffff82111561366157600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff82111561368d57600080fd5b601f19601f8301169050602081019050919050565b6000819050919050565b6000819050919050565b600060019050919050565b600060029050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b6000602082019050919050565b60006137078261371a565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061374f8261371a565b9050919050565b60008115159050919050565b6000819050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6000819050919050565b60006137ad826137b4565b9050919050565b60006137bf826137c6565b9050919050565b60006137d18261371a565b9050919050565b82818337600083830152505050565b60005b838110156138055780820151818401526020810190506137ea565b83811115613814576000848401525b50505050565b6000601f19601f830116905091905056fea265627a7a72305820c6134ab97f98881457bfee5b68006f6568870e66c66926dea94ea660160afb396c6578706572696d656e74616cf50037",
  "sourceMap": "228:1698:3:-;;;602:1;570:33;;870:104;8:9:-1;5:2;;;30:1;27;20:12;5:2;870:104:3;;;;;;;;;;;;;;;;;;;;;;20393:283:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;814:10;805:6;;:19;;;;;;;;;;;;;;;;;;869:6;;;;;;;;;;;839:37;;865:1;839:37;;;;;;;;;;;;2254:5;2244:7;;:15;;;;;;;;;;;;;;;;;;3500:40;3097:10;3519:20;;3500:18;;;:40;;;:::i;:::-;5646;5520:10;5665:20;;5646:18;;;:40;;;:::i;:::-;13097:51;12703:10;13116:31;;13097:18;;;:51;;;:::i;:::-;20542:4;20534:5;:12;;;;;;;;;;;;:::i;:::-;;20566:6;20556:7;:16;;;;;;;;;;;;:::i;:::-;;20598:12;20582:13;:28;;;;;;;;;;;;:::i;:::-;;20620:49;20204:10;20639:29;;20620:18;;;:49;;;:::i;:::-;20393:283;;;951:15:3;925:14;;:42;;;;;;;;;;;;;;;;;;870:104;228:1698;;3850:158:0;3940:10;3925:25;;:11;:25;;;;;3917:34;;;;;;;;3997:4;3961:20;:33;3982:11;3961:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3850:158;:::o;228:1698:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:122:-1:-;;83:39;114:6;108:13;83:39;;;74:48;;68:59;;;;;134:263;;249:2;237:9;228:7;224:23;220:32;217:2;;;265:1;262;255:12;217:2;300:1;317:64;373:7;364:6;353:9;349:22;317:64;;;307:74;;279:108;211:186;;;;;404:128;;484:42;477:5;473:54;462:65;;456:76;;;;539:105;;608:31;633:5;608:31;;;597:42;;591:53;;;;228:1698:3;;;;;;;",
  "deployedSourceMap": "228:1698:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;228:1698:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3638:133:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;20763:80;;;:::i;:::-;;;;;;;;;;;;;;;;6864:167;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6225:633;;;;;;;;;;;;;;;;:::i;:::-;;13862:94;;;:::i;:::-;;;;;;;;;;;;;;;;8008:202;;;;;;;;;;;;;;;;:::i;:::-;;14801:122:2;;;;;;;;;;;;;;;;:::i;:::-;;13528:182:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;14929:166:2;;;;;;;;;;;;;;;;:::i;:::-;;2905:110:0;;;:::i;:::-;;22660:175;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;8216:132;;;;;;;;;;;;;;;;:::i;:::-;;14293:148;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5990:162;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;5699:285;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2788:111;;;:::i;:::-;;1099:76;;;:::i;:::-;;;;;;;;;;;;;;;;20849:84;;;:::i;:::-;;;;;;;;;;;;;;;;7323:213;;;;;;;;;;;;;;;;:::i;:::-;;8354:211;;;;;;;;;;;;;;;;:::i;:::-;;21046:149;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;20943:96;;;:::i;:::-;;;;;;;;;;;;;;;;1475:446:3;;;;;;;;;;;;;;;;:::i;:::-;;7857:145:0;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1232:245;;;;;;;;;;;;;;;;:::i;:::-;;3638:133;3708:4;3731:20;:33;3752:11;3731:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3724:40;;3638:133;;;:::o;20763:80::-;20799:13;20831:5;20824:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20763:80;:::o;6864:167::-;6923:7;7000:15;:24;7016:7;7000:24;;;;;;;;;;;;;;;;;;;;;6993:31;;6864:167;;;:::o;6225:633::-;6288:14;6305:16;6313:7;6305;:16::i;:::-;6288:33;;6422:6;6416:12;;:2;:12;;;;6408:63;;;;;;;;;;;;;;;;;;;;;;;;6607:6;6593:20;;:10;:20;;;:60;;;;6617:36;6634:6;6642:10;6617:16;:36::i;:::-;6593:60;6585:94;;;;;;;;;;;;;;;;;;;;;;;;6768:2;6741:15;:24;6757:7;6741:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6842:7;6838:2;6821:29;;6830:6;6821:29;;;;;;;;;;;;6225:633;;;:::o;13862:94::-;13906:7;13932:10;:17;;;;13925:24;;13862:94;:::o;8008:202::-;8098:39;8117:10;8129:7;8098:18;:39::i;:::-;8090:70;;;;;;;;;;;;;;;;;;;;;;;;8171:32;8185:4;8191:2;8195:7;8171:13;:32::i;:::-;8008:202;;;:::o;14801:122:2:-;14876:40;14887:5;14894:7;14913:1;14903:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;14903:12:2;;;;14876:10;:40::i;:::-;14801:122;;:::o;13528:182:0:-;13608:7;13643:16;13653:5;13643:9;:16::i;:::-;13635:5;:24;13627:33;;;;;;;;13677:12;:19;13690:5;13677:19;;;;;;;;;;;;;;;13697:5;13677:26;;;;;;;;;;;;;;;;;;13670:33;;13528:182;;;;:::o;14929:166:2:-;;;;:::o;2905:110:0:-;1039:10;1029:20;;:6;;;;;;;;;;;:20;;;1021:54;;;;;;;;;;;;;;;;;;;;;;;;2473:16;:14;:16::i;:::-;2968:5;2958:7;;:15;;;;;;;;;;;;;;;;;;2988:20;2997:10;2988:20;;;;;;;;;;;;;;;2905:110::o;22660:175::-;22728:4;1039:10;1029:20;;:6;;;;;;;;;;;:20;;;1021:54;;;;;;;;;;;;;;;;;;;;;;;;22744:24;22756:2;22760:7;22744:11;:24::i;:::-;22778:29;22799:7;22778:20;:29::i;:::-;22824:4;22817:11;;22660:175;;;;:::o;8216:132::-;8302:39;8319:4;8325:2;8329:7;8302:39;;;;;;;;;;;;;:16;:39::i;:::-;8216:132;;;:::o;14293:148::-;14351:7;14386:13;:11;:13::i;:::-;14378:5;:21;14370:30;;;;;;;;14417:10;14428:5;14417:17;;;;;;;;;;;;;;;;;;14410:24;;14293:148;;;:::o;5990:162::-;6045:7;6125:11;:20;6137:7;6125:20;;;;;;;;;;;;;;;;;;;;;6118:27;;5990:162;;;:::o;5699:285::-;5754:7;5943:34;:17;:24;5961:5;5943:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5936:41;;5699:285;;;:::o;2788:111::-;1039:10;1029:20;;:6;;;;;;;;;;;:20;;;1021:54;;;;;;;;;;;;;;;;;;;;;;;;2402:19;:17;:19::i;:::-;2855:4;2845:7;;:14;;;;;;;;;;;;;;;;;;2874:18;2881:10;2874:18;;;;;;;;;;;;;;;2788:111::o;1099:76::-;1136:7;1162:6;;;;;;;;;;;1155:13;;1099:76;:::o;20849:84::-;20887:13;20919:7;20912:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20849:84;:::o;7323:213::-;7408:10;7402:16;;:2;:16;;;;7394:25;;;;;;;;7466:8;7429:18;:30;7448:10;7429:30;;;;;;;;;;;;;;;:34;7460:2;7429:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7516:2;7489:40;;7504:10;7489:40;;;7520:8;7489:40;;;;;;;;;;;;;;;7323:213;;:::o;8354:211::-;8460:31;8473:4;8479:2;8483:7;8460:12;:31::i;:::-;8509:48;8532:4;8538:2;8542:7;8551:5;8509:22;:48::i;:::-;8501:57;;;;;;;;8354:211;;;;:::o;21046:149::-;21102:13;21135:16;21143:7;21135;:16::i;:::-;21127:25;;;;;;;;21169:10;:19;21180:7;21169:19;;;;;;;;;;;21162:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21046:149;;;:::o;20943:96::-;20987:13;21019;21012:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20943:96;:::o;1475:446:3:-;1591:11;1632:5;:7;;;:9;;;1643:5;:7;;;:9;;;1654:5;:7;;;:9;;;1665:5;:7;;;:9;;;1676:5;:7;;;:9;;;1687:5;:7;;;:9;;;1698:5;1615:89;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1615:89:3;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1615:89:3;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1615:89:3;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1615:89:3;;;1605:100;;;;;;1591:114;;1752:1;1723:31;;:9;:14;1733:3;1723:14;;;;;;;;;;;:17;;;;;;;;;;;;:31;;;1715:56;;;;;;;;;;;;;;;;;;;;;;;;1789:14;;;;;;;;;;;:23;;;1813:5;1820;1789:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1789:37:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;1789:37:3;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;1789:37:3;;;;;;;;;1781:60;;;;;;;;;;;;;;;;;;;;;;;;1851:20;1863:3;1868:2;1851:11;:20::i;:::-;1891:23;1902:2;1906:7;1891:10;:23::i;:::-;;1475:446;;;;;:::o;7857:145:0:-;7937:4;7960:18;:25;7979:5;7960:25;;;;;;;;;;;;;;;:35;7986:8;7960:35;;;;;;;;;;;;;;;;;;;;;;;;;7953:42;;7857:145;;;;:::o;1232:245::-;1039:10;1029:20;;:6;;;;;;;;;;;:20;;;1021:54;;;;;;;;;;;;;;;;;;;;;;;;1442:28;1461:8;1442:18;:28::i;:::-;1232:245;:::o;9271:246::-;9356:4;9372:13;9388:16;9396:7;9388;:16::i;:::-;9372:32;;9433:5;9422:16;;:7;:16;;;:51;;;;9466:7;9442:31;;:20;9454:7;9442:11;:20::i;:::-;:31;;;9422:51;:87;;;;9477:32;9494:5;9501:7;9477:16;:32::i;:::-;9422:87;9414:96;;;9271:246;;;;:::o;14816:239::-;14901:38;14921:4;14927:2;14931:7;14901:19;:38::i;:::-;14950:47;14983:4;14989:7;14950:32;:47::i;:::-;15008:40;15036:2;15040:7;15008:27;:40::i;:::-;14816:239;;;:::o;2616:96::-;2673:7;;;;;;;;;;;2665:40;;;;;;;;;;;;;;;;;;;;;;;;2616:96::o;15310:196::-;15373:24;15385:2;15389:7;15373:11;:24::i;:::-;15408:40;15436:2;15440:7;15408:27;:40::i;:::-;15459;15491:7;15459:31;:40::i;:::-;15310:196;;:::o;21672:228::-;21740:16;21748:7;21740;:16::i;:::-;21732:25;;;;;;;;21767:17;21787:71;21811:13;21787:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21826:31;21849:7;21826:22;:31::i;:::-;21787:23;:71::i;:::-;21767:91;;21890:3;21868:10;:19;21879:7;21868:19;;;;;;;;;;;:25;;;;;;;;;;;;:::i;:::-;;21672:228;;:::o;1062:112:5:-;1127:7;1153;:14;;;1146:21;;1062:112;;;:::o;2513:97:0:-;2575:7;;;;;;;;;;;2574:8;2566:37;;;;;;;;;;;;;;;;;;;;;;;;2513:97::o;11548:347::-;11669:4;11694:15;:2;:13;;;:15::i;:::-;11693:16;11689:58;;;11732:4;11725:11;;;;11689:58;11757:13;11789:2;11773:36;;;11810:10;11822:4;11828:7;11837:5;11773:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11773:70:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11773:70:0;;;;;;;101:4:-1;97:9;90:4;84;80:15;76:31;69:5;65:43;126:6;120:4;113:20;0:138;11773:70:0;;;;;;;;;11757:86;;4653:10;11871:16;;11861:26;;;:6;:26;;;;11853:35;;;11548:347;;;;;;;:::o;8759:152::-;8816:4;8832:13;8848:11;:20;8860:7;8848:20;;;;;;;;;;;;;;;;;;;;;8832:36;;8902:1;8885:19;;:5;:19;;;;8878:26;;;8759:152;;;:::o;1059:201:3:-;1140:20;1158:1;1140:13;;:17;;:20;;;;:::i;:::-;1124:13;:36;;;;1187:27;;;;;;;;;1196:13;;1187:27;;;;1211:2;1187:27;;;;;1170:9;:14;1180:3;1170:14;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1229:24;1235:13;;1250:2;1229:24;;;;;;;;;;;;;;;;1059:201;;:::o;1483:180:0:-;1576:1;1556:22;;:8;:22;;;;1548:31;;;;;;;;1620:8;1594:35;;1612:6;;;;;;;;;;;1594:35;;;;;;;;;;;;1648:8;1639:6;;:17;;;;;;;;;;;;;;;;;;1483:180;:::o;10303:717::-;10388:14;10405:16;10413:7;10405;:16::i;:::-;10388:33;;10517:6;10509:14;;:4;:14;;;10501:47;;;;;;;;;;;;;;;;;;;;;;;;10648:1;10634:16;;:2;:16;;;;10626:46;;;;;;;;;;;;;;;;;;;;;;;;10714:23;10729:7;10714:14;:23::i;:::-;10822:35;:17;:23;10840:4;10822:23;;;;;;;;;;;;;;;:33;:35::i;:::-;10890:2;10867:11;:20;10879:7;10867:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10902:33;:17;:21;10920:2;10902:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11005:7;11001:2;10986:27;;10995:4;10986:27;;;;;;;;;;;;10303:717;;;;:::o;17282:1128::-;17544:22;17569:32;17599:1;17569:12;:18;17582:4;17569:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;17544:57;;17611:18;17632:17;:26;17650:7;17632:26;;;;;;;;;;;;17611:47;;17776:14;17762:10;:28;;17758:323;;;17806:19;17828:12;:18;17841:4;17828:18;;;;;;;;;;;;;;;17847:14;17828:34;;;;;;;;;;;;;;;;;;17806:56;;17910:11;17877:12;:18;17890:4;17877:18;;;;;;;;;;;;;;;17896:10;17877:30;;;;;;;;;;;;;;;;;:44;;;;18026:10;17993:17;:30;18011:11;17993:30;;;;;;;;;;;:43;;;;17758:323;;18167:12;:18;18180:4;18167:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17282:1128;;;;:::o;16128:183::-;16241:12;:16;16254:2;16241:16;;;;;;;;;;;;;;;:23;;;;16212:17;:26;16230:7;16212:26;;;;;;;;;;;:52;;;;16274:12;:16;16287:2;16274:16;;;;;;;;;;;;;;;16296:7;16274:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16274:30:0;;;;;;;;;;;;;;;;;;;;;;16128:183;;:::o;9674:430::-;9830:16;9838:7;9830;:16::i;:::-;9829:17;9821:44;;;;;;;;;;;;;;;;;;;;;;;;9976:2;9953:11;:20;9965:7;9953:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;9988:33;:17;:21;10006:2;9988:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10089:7;10085:2;10072:25;;10081:2;10072:25;;;;;;;;;;;;9674:430;;:::o;16506:161::-;16609:10;:17;;;;16582:15;:24;16598:7;16582:24;;;;;;;;;;;:44;;;;16636:10;16652:7;16636:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16636:24:0;;;;;;;;;;;;;;;;;;;;;;16506:161;:::o;43271:465:2:-;43321:27;43370:1;43364:2;:7;43360:48;;;43387:10;;;;;;;;;;;;;;;;;;;;;;43360:48;43417:6;43426:2;43417:11;;43438:8;43456:66;43468:1;43463;:6;;43456:66;;;43485:5;;;;;;;43509:2;43504:7;;;;;;;;;;;43456:66;;;43531:17;43561:3;43551:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;43551:14:2;;;;43531:34;;43575:6;43590:1;43584:3;:7;43575:16;;43601:100;43614:1;43608:2;:7;;43601:100;;;43664:2;43659;:7;;;;;;;;43654:2;:12;43643:25;;43631:4;43636:3;;;;;;;43631:9;;;;;;;;;;;;;;:37;;;;;;;;;;;43688:2;43682:8;;;;;;;;;;;43601:100;;;43724:4;43710:19;;;;;;43271:465;;;;:::o;39712:166::-;39790:33;39842:29;39852:2;39856;39842:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;39835:36;;39712:166;;;;:::o;463:616:8:-;523:4;539:12;1038:7;1026:20;1018:28;;1071:1;1064:4;:8;1057:15;;;463:616;;;:::o;1439:145:6:-;1497:7;1516:9;1532:1;1528;:5;1516:17;;1556:1;1551;:6;;1543:15;;;;;;;;1576:1;1569:8;;;1439:145;;;;:::o;11976:171:0:-;12075:1;12039:38;;:15;:24;12055:7;12039:24;;;;;;;;;;;;;;;;;;;;;:38;;;;12035:106;;;12128:1;12093:15;:24;12109:7;12093:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;12035:106;11976:171;:::o;1275:108:5:-;1355:21;1374:1;1355:7;:14;;;:18;;:21;;;;:::i;:::-;1338:7;:14;;:38;;;;1275:108;:::o;1180:89::-;1261:1;1243:7;:14;;;:19;;;;;;;;;;;1180:89;:::o;1211:145:6:-;1269:7;1301:1;1296;:6;;1288:15;;;;;;;;1313:9;1329:1;1325;:5;1313:17;;1348:1;1341:8;;;1211:145;;;;:::o;40282:1020:2:-;40414:33;40459:16;40484:2;40459:28;;40497:16;40522:2;40497:28;;40535:16;40560:2;40535:28;;40573:16;40598:2;40573:28;;40611:16;40636:2;40611:28;;40649:19;40734:3;:10;40721:3;:10;40708:3;:10;40695:3;:10;40682:3;:10;:23;:36;:49;:62;40671:74;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;40671:74:2;;;;40649:96;;40755:19;40783:5;40755:34;;40799:6;40808:1;40799:10;;40819:6;40828:1;40819:10;;40848:1;40844:5;;40839:78;40855:3;:10;40851:1;:14;40839:78;;;40900:3;40904:1;40900:6;;;;;;;;;;;;;;;;;;;;40886;40893:3;;;;;;40886:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40867:3;;;;;;;40839:78;;;40935:1;40931:5;;40926:78;40942:3;:10;40938:1;:14;40926:78;;;40987:3;40991:1;40987:6;;;;;;;;;;;;;;;;;;;;40973;40980:3;;;;;;40973:11;;;;;;;;;;;;;;:20;;;;;;;;;;;40954:3;;;;;;;40926:78;;;41022:1;41018:5;;41013:78;41029:3;:10;41025:1;:14;41013:78;;;41074:3;41078:1;41074:6;;;;;;;;;;;;;;;;;;;;41060;41067:3;;;;;;41060:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41041:3;;;;;;;41013:78;;;41109:1;41105:5;;41100:78;41116:3;:10;41112:1;:14;41100:78;;;41161:3;41165:1;41161:6;;;;;;;;;;;;;;;;;;;;41147;41154:3;;;;;;41147:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41128:3;;;;;;;41100:78;;;41196:1;41192:5;;41187:78;41203:3;:10;41199:1;:14;41187:78;;;41248:3;41252:1;41248:6;;;;;;;;;;;;;;;;;;;;41234;41241:3;;;;;;41234:11;;;;;;;;;;;;;;:20;;;;;;;;;;;41215:3;;;;;;;41187:78;;;41288:6;41274:21;;;;;;;;;;;40282:1020;;;;;;;:::o;228:1698:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:118:-1:-;;72:46;110:6;97:20;72:46;;;63:55;;57:66;;;;;149:615;;264:3;257:4;249:6;245:17;241:27;234:35;231:2;;;282:1;279;272:12;231:2;306:3;324:78;339:62;394:6;339:62;;;324:78;;;315:87;;419:5;478:6;525:3;517:4;509:6;505:17;500:3;496:27;493:36;490:2;;;542:1;539;532:12;490:2;567:1;552:206;577:6;574:1;571:13;552:206;;;635:3;657:37;690:3;678:10;657:37;;;652:3;645:50;718:4;713:3;709:14;702:21;;746:4;741:3;737:14;730:21;;609:149;599:1;596;592:9;587:14;;552:206;;;556:14;224:540;;;;;;;;791:607;;902:3;895:4;887:6;883:17;879:27;872:35;869:2;;;920:1;917;910:12;869:2;944:3;962:74;977:58;1028:6;977:58;;;962:74;;;953:83;;1053:5;1112:6;1159:3;1151:4;1143:6;1139:17;1134:3;1130:27;1127:36;1124:2;;;1176:1;1173;1166:12;1124:2;1201:1;1186:206;1211:6;1208:1;1205:13;1186:206;;;1269:3;1291:37;1324:3;1312:10;1291:37;;;1286:3;1279:50;1352:4;1347:3;1343:14;1336:21;;1380:4;1375:3;1371:14;1364:21;;1243:149;1233:1;1230;1226:9;1221:14;;1186:206;;;1190:14;862:536;;;;;;;;1406:112;;1470:43;1505:6;1492:20;1470:43;;;1461:52;;1455:63;;;;;1525:116;;1600:36;1628:6;1622:13;1600:36;;;1591:45;;1585:56;;;;;1648:118;;1715:46;1753:6;1740:20;1715:46;;;1706:55;;1700:66;;;;;1773:116;;1839:45;1876:6;1863:20;1839:45;;;1830:54;;1824:65;;;;;1896:120;;1973:38;2003:6;1997:13;1973:38;;;1964:47;;1958:58;;;;;2024:440;;2125:3;2118:4;2110:6;2106:17;2102:27;2095:35;2092:2;;;2143:1;2140;2133:12;2092:2;2180:6;2167:20;2202:64;2217:48;2258:6;2217:48;;;2202:64;;;2193:73;;2286:6;2279:5;2272:21;2322:4;2314:6;2310:17;2355:4;2348:5;2344:16;2390:3;2381:6;2376:3;2372:16;2369:25;2366:2;;;2407:1;2404;2397:12;2366:2;2417:41;2451:6;2446:3;2441;2417:41;;;2085:379;;;;;;;;2473:442;;2575:3;2568:4;2560:6;2556:17;2552:27;2545:35;2542:2;;;2593:1;2590;2583:12;2542:2;2630:6;2617:20;2652:65;2667:49;2709:6;2667:49;;;2652:65;;;2643:74;;2737:6;2730:5;2723:21;2773:4;2765:6;2761:17;2806:4;2799:5;2795:16;2841:3;2832:6;2827:3;2823:16;2820:25;2817:2;;;2858:1;2855;2848:12;2817:2;2868:41;2902:6;2897:3;2892;2868:41;;;2535:380;;;;;;;;2952:456;;3062:4;3050:9;3045:3;3041:19;3037:30;3034:2;;;3080:1;3077;3070:12;3034:2;3098:20;3113:4;3098:20;;;3089:29;;3165:1;3196:49;3241:3;3232:6;3221:9;3217:22;3196:49;;;3190:3;3183:5;3179:15;3172:74;3128:129;3304:2;3337:49;3382:3;3373:6;3362:9;3358:22;3337:49;;;3330:4;3323:5;3319:16;3312:75;3267:131;3028:380;;;;;3444:494;;3554:4;3542:9;3537:3;3533:19;3529:30;3526:2;;;3572:1;3569;3562:12;3526:2;3590:20;3605:4;3590:20;;;3581:29;;3657:1;3688:68;3752:3;3743:6;3732:9;3728:22;3688:68;;;3682:3;3675:5;3671:15;3664:93;3620:148;3815:2;3848:68;3912:3;3903:6;3892:9;3888:22;3848:68;;;3841:4;3834:5;3830:16;3823:94;3778:150;3520:418;;;;;3973:664;;4085:5;4073:9;4068:3;4064:19;4060:31;4057:2;;;4104:1;4101;4094:12;4057:2;4122:20;4137:4;4122:20;;;4113:29;;4189:1;4220:70;4286:3;4277:6;4266:9;4262:22;4220:70;;;4214:3;4207:5;4203:15;4196:95;4152:150;4349:2;4382:70;4448:3;4439:6;4428:9;4424:22;4382:70;;;4375:4;4368:5;4364:16;4357:96;4312:152;4511:3;4545:70;4611:3;4602:6;4591:9;4587:22;4545:70;;;4538:4;4531:5;4527:16;4520:96;4474:153;4051:586;;;;;4644:118;;4711:46;4749:6;4736:20;4711:46;;;4702:55;;4696:66;;;;;4769:241;;4873:2;4861:9;4852:7;4848:23;4844:32;4841:2;;;4889:1;4886;4879:12;4841:2;4924:1;4941:53;4986:7;4977:6;4966:9;4962:22;4941:53;;;4931:63;;4903:97;4835:175;;;;;5017:366;;;5138:2;5126:9;5117:7;5113:23;5109:32;5106:2;;;5154:1;5151;5144:12;5106:2;5189:1;5206:53;5251:7;5242:6;5231:9;5227:22;5206:53;;;5196:63;;5168:97;5296:2;5314:53;5359:7;5350:6;5339:9;5335:22;5314:53;;;5304:63;;5275:98;5100:283;;;;;;5390:491;;;;5528:2;5516:9;5507:7;5503:23;5499:32;5496:2;;;5544:1;5541;5534:12;5496:2;5579:1;5596:53;5641:7;5632:6;5621:9;5617:22;5596:53;;;5586:63;;5558:97;5686:2;5704:53;5749:7;5740:6;5729:9;5725:22;5704:53;;;5694:63;;5665:98;5794:2;5812:53;5857:7;5848:6;5837:9;5833:22;5812:53;;;5802:63;;5773:98;5490:391;;;;;;5888:721;;;;;6052:3;6040:9;6031:7;6027:23;6023:33;6020:2;;;6069:1;6066;6059:12;6020:2;6104:1;6121:53;6166:7;6157:6;6146:9;6142:22;6121:53;;;6111:63;;6083:97;6211:2;6229:53;6274:7;6265:6;6254:9;6250:22;6229:53;;;6219:63;;6190:98;6319:2;6337:53;6382:7;6373:6;6362:9;6358:22;6337:53;;;6327:63;;6298:98;6455:2;6444:9;6440:18;6427:32;6479:18;6471:6;6468:30;6465:2;;;6511:1;6508;6501:12;6465:2;6531:62;6585:7;6576:6;6565:9;6561:22;6531:62;;;6521:72;;6406:193;6014:595;;;;;;;;6616:360;;;6734:2;6722:9;6713:7;6709:23;6705:32;6702:2;;;6750:1;6747;6740:12;6702:2;6785:1;6802:53;6847:7;6838:6;6827:9;6823:22;6802:53;;;6792:63;;6764:97;6892:2;6910:50;6952:7;6943:6;6932:9;6928:22;6910:50;;;6900:60;;6871:95;6696:280;;;;;;6983:366;;;7104:2;7092:9;7083:7;7079:23;7075:32;7072:2;;;7120:1;7117;7110:12;7072:2;7155:1;7172:53;7217:7;7208:6;7197:9;7193:22;7172:53;;;7162:63;;7134:97;7262:2;7280:53;7325:7;7316:6;7305:9;7301:22;7280:53;;;7270:63;;7241:98;7066:283;;;;;;7356:710;;;;;7557:3;7545:9;7536:7;7532:23;7528:33;7525:2;;;7574:1;7571;7564:12;7525:2;7609:1;7626:53;7671:7;7662:6;7651:9;7647:22;7626:53;;;7616:63;;7588:97;7716:2;7734:53;7779:7;7770:6;7759:9;7755:22;7734:53;;;7724:63;;7695:98;7824:2;7842:76;7910:7;7901:6;7890:9;7886:22;7842:76;;;7832:86;;7803:121;7955:3;7974:76;8042:7;8033:6;8022:9;8018:22;7974:76;;;7964:86;;7934:122;7519:547;;;;;;;;8073:257;;8185:2;8173:9;8164:7;8160:23;8156:32;8153:2;;;8201:1;8198;8191:12;8153:2;8236:1;8253:61;8306:7;8297:6;8286:9;8282:22;8253:61;;;8243:71;;8215:105;8147:183;;;;;8337:472;;;8468:2;8456:9;8447:7;8443:23;8439:32;8436:2;;;8484:1;8481;8474:12;8436:2;8519:1;8536:53;8581:7;8572:6;8561:9;8557:22;8536:53;;;8526:63;;8498:97;8654:2;8643:9;8639:18;8626:32;8678:18;8670:6;8667:30;8664:2;;;8710:1;8707;8700:12;8664:2;8730:63;8785:7;8776:6;8765:9;8761:22;8730:63;;;8720:73;;8605:194;8430:379;;;;;;8816:701;;;;8973:2;8961:9;8952:7;8948:23;8944:32;8941:2;;;8989:1;8986;8979:12;8941:2;9024:1;9041:53;9086:7;9077:6;9066:9;9062:22;9041:53;;;9031:63;;9003:97;9159:2;9148:9;9144:18;9131:32;9183:18;9175:6;9172:30;9169:2;;;9215:1;9212;9205:12;9169:2;9235:63;9290:7;9281:6;9270:9;9266:22;9235:63;;;9225:73;;9110:194;9363:2;9352:9;9348:18;9335:32;9387:18;9379:6;9376:30;9373:2;;;9419:1;9416;9409:12;9373:2;9439:62;9493:7;9484:6;9473:9;9469:22;9439:62;;;9429:72;;9314:193;8935:582;;;;;;9524:239;;9627:2;9615:9;9606:7;9602:23;9598:32;9595:2;;;9643:1;9640;9633:12;9595:2;9678:1;9695:52;9739:7;9730:6;9719:9;9715:22;9695:52;;;9685:62;;9657:96;9589:174;;;;;9770:261;;9884:2;9872:9;9863:7;9859:23;9855:32;9852:2;;;9900:1;9897;9890:12;9852:2;9935:1;9952:63;10007:7;9998:6;9987:9;9983:22;9952:63;;;9942:73;;9914:107;9846:185;;;;;10038:241;;10142:2;10130:9;10121:7;10117:23;10113:32;10110:2;;;10158:1;10155;10148:12;10110:2;10193:1;10210:53;10255:7;10246:6;10235:9;10231:22;10210:53;;;10200:63;;10172:97;10104:175;;;;;10286:132;10367:45;10406:5;10367:45;;;10362:3;10355:58;10349:69;;;10425:110;10498:31;10523:5;10498:31;;;10493:3;10486:44;10480:55;;;10575:521;10698:52;10744:5;10698:52;;;10796:54;10844:5;10796:54;;;10871:1;10856:228;10881:6;10878:1;10875:13;10856:228;;;10921:53;10970:3;10961:6;10955:13;10921:53;;;10991:58;11042:6;10991:58;;;10981:68;;11072:4;11067:3;11063:14;11056:21;;10903:1;10900;10896:9;10891:14;;10856:228;;;10860:14;10677:419;;;;;11137:505;11256:48;11298:5;11256:48;;;11350:50;11394:5;11350:50;;;11421:1;11406:224;11431:6;11428:1;11425:13;11406:224;;;11471:53;11520:3;11511:6;11505:13;11471:53;;;11541:54;11588:6;11541:54;;;11531:64;;11618:4;11613:3;11609:14;11602:21;;11453:1;11450;11446:9;11441:14;;11406:224;;;11410:14;11235:407;;;;;11650:101;11717:28;11739:5;11717:28;;;11712:3;11705:41;11699:52;;;11758:297;;11858:38;11890:5;11858:38;;;11913:6;11908:3;11901:19;11925:63;11981:6;11974:4;11969:3;11965:14;11958:4;11951:5;11947:16;11925:63;;;12020:29;12042:6;12020:29;;;12013:4;12008:3;12004:14;12000:50;11993:57;;11838:217;;;;;;12062:300;;12164:39;12197:5;12164:39;;;12220:6;12215:3;12208:19;12232:63;12288:6;12281:4;12276:3;12272:14;12265:4;12258:5;12254:16;12232:63;;;12327:29;12349:6;12327:29;;;12320:4;12315:3;12311:14;12307:50;12300:57;;12144:218;;;;;;12370:296;;12525:2;12520:3;12513:15;12562:66;12557:2;12552:3;12548:12;12541:88;12657:2;12652:3;12648:12;12641:19;;12506:160;;;;12675:296;;12830:2;12825:3;12818:15;12867:66;12862:2;12857:3;12853:12;12846:88;12962:2;12957:3;12953:12;12946:19;;12811:160;;;;12980:296;;13135:2;13130:3;13123:15;13172:66;13167:2;13162:3;13158:12;13151:88;13267:2;13262:3;13258:12;13251:19;;13116:160;;;;13285:296;;13440:2;13435:3;13428:15;13477:66;13472:2;13467:3;13463:12;13456:88;13572:2;13567:3;13563:12;13556:19;;13421:160;;;;13590:296;;13745:2;13740:3;13733:15;13782:66;13777:2;13772:3;13768:12;13761:88;13877:2;13872:3;13868:12;13861:19;;13726:160;;;;13895:296;;14050:2;14045:3;14038:15;14087:66;14082:2;14077:3;14073:12;14066:88;14182:2;14177:3;14173:12;14166:19;;14031:160;;;;14200:296;;14355:2;14350:3;14343:15;14392:66;14387:2;14382:3;14378:12;14371:88;14487:2;14482:3;14478:12;14471:19;;14336:160;;;;14505:296;;14660:2;14655:3;14648:15;14697:66;14692:2;14687:3;14683:12;14676:88;14792:2;14787:3;14783:12;14776:19;;14641:160;;;;14810:296;;14965:2;14960:3;14953:15;15002:66;14997:2;14992:3;14988:12;14981:88;15097:2;15092:3;15088:12;15081:19;;14946:160;;;;15115:397;;15270:2;15265:3;15258:15;15307:66;15302:2;15297:3;15293:12;15286:88;15408:66;15403:2;15398:3;15394:12;15387:88;15503:2;15498:3;15494:12;15487:19;;15251:261;;;;15521:296;;15676:2;15671:3;15664:15;15713:66;15708:2;15703:3;15699:12;15692:88;15808:2;15803:3;15799:12;15792:19;;15657:160;;;;15880:482;16009:4;16004:3;16000:14;16092:3;16085:5;16081:15;16075:22;16109:61;16165:3;16160;16156:13;16143:11;16109:61;;;16029:153;16255:4;16248:5;16244:16;16238:23;16273:62;16329:4;16324:3;16320:14;16307:11;16273:62;;;16192:155;15982:380;;;;16424:566;16553:4;16548:3;16544:14;16636:3;16629:5;16625:15;16619:22;16653:103;16751:3;16746;16742:13;16729:11;16653:103;;;16573:195;16841:4;16834:5;16830:16;16824:23;16859:104;16957:4;16952:3;16948:14;16935:11;16859:104;;;16778:197;16526:464;;;;17050:786;17179:5;17174:3;17170:15;17263:3;17256:5;17252:15;17246:22;17280:107;17382:3;17377;17373:13;17360:11;17280:107;;;17200:199;17472:4;17465:5;17461:16;17455:23;17490:108;17592:4;17587:3;17583:14;17570:11;17490:108;;;17409:201;17683:4;17676:5;17672:16;17666:23;17701:108;17803:4;17798:3;17794:14;17781:11;17701:108;;;17620:201;17152:684;;;;17843:110;17916:31;17941:5;17916:31;;;17911:3;17904:44;17898:55;;;17960:193;;18068:2;18057:9;18053:18;18045:26;;18082:61;18140:1;18129:9;18125:17;18116:6;18082:61;;;18039:114;;;;;18160:209;;18276:2;18265:9;18261:18;18253:26;;18290:69;18356:1;18345:9;18341:17;18332:6;18290:69;;;18247:122;;;;;18376:597;;18594:3;18583:9;18579:19;18571:27;;18609:69;18675:1;18664:9;18660:17;18651:6;18609:69;;;18689:62;18747:2;18736:9;18732:18;18723:6;18689:62;;;18762;18820:2;18809:9;18805:18;18796:6;18762:62;;;18872:9;18866:4;18862:20;18857:2;18846:9;18842:18;18835:48;18897:66;18958:4;18949:6;18897:66;;;18889:74;;18565:408;;;;;;;;18980:181;;19082:2;19071:9;19067:18;19059:26;;19096:55;19148:1;19137:9;19133:17;19124:6;19096:55;;;19053:108;;;;;19168:281;;19296:2;19285:9;19281:18;19273:26;;19346:9;19340:4;19336:20;19332:1;19321:9;19317:17;19310:47;19371:68;19434:4;19425:6;19371:68;;;19363:76;;19267:182;;;;;19456:387;;19637:2;19626:9;19622:18;19614:26;;19687:9;19681:4;19677:20;19673:1;19662:9;19658:17;19651:47;19712:121;19828:4;19712:121;;;19704:129;;19608:235;;;;19850:387;;20031:2;20020:9;20016:18;20008:26;;20081:9;20075:4;20071:20;20067:1;20056:9;20052:17;20045:47;20106:121;20222:4;20106:121;;;20098:129;;20002:235;;;;20244:387;;20425:2;20414:9;20410:18;20402:26;;20475:9;20469:4;20465:20;20461:1;20450:9;20446:17;20439:47;20500:121;20616:4;20500:121;;;20492:129;;20396:235;;;;20638:387;;20819:2;20808:9;20804:18;20796:26;;20869:9;20863:4;20859:20;20855:1;20844:9;20840:17;20833:47;20894:121;21010:4;20894:121;;;20886:129;;20790:235;;;;21032:387;;21213:2;21202:9;21198:18;21190:26;;21263:9;21257:4;21253:20;21249:1;21238:9;21234:17;21227:47;21288:121;21404:4;21288:121;;;21280:129;;21184:235;;;;21426:387;;21607:2;21596:9;21592:18;21584:26;;21657:9;21651:4;21647:20;21643:1;21632:9;21628:17;21621:47;21682:121;21798:4;21682:121;;;21674:129;;21578:235;;;;21820:387;;22001:2;21990:9;21986:18;21978:26;;22051:9;22045:4;22041:20;22037:1;22026:9;22022:17;22015:47;22076:121;22192:4;22076:121;;;22068:129;;21972:235;;;;22214:387;;22395:2;22384:9;22380:18;22372:26;;22445:9;22439:4;22435:20;22431:1;22420:9;22416:17;22409:47;22470:121;22586:4;22470:121;;;22462:129;;22366:235;;;;22608:387;;22789:2;22778:9;22774:18;22766:26;;22839:9;22833:4;22829:20;22825:1;22814:9;22810:17;22803:47;22864:121;22980:4;22864:121;;;22856:129;;22760:235;;;;23002:387;;23183:2;23172:9;23168:18;23160:26;;23233:9;23227:4;23223:20;23219:1;23208:9;23204:17;23197:47;23258:121;23374:4;23258:121;;;23250:129;;23154:235;;;;23396:387;;23577:2;23566:9;23562:18;23554:26;;23627:9;23621:4;23617:20;23613:1;23602:9;23598:17;23591:47;23652:121;23768:4;23652:121;;;23644:129;;23548:235;;;;23790:480;;24018:3;24007:9;24003:19;23995:27;;24033:107;24137:1;24126:9;24122:17;24113:6;24033:107;;;24151:109;24255:3;24244:9;24240:19;24231:6;24151:109;;;23989:281;;;;;;24277:193;;24385:2;24374:9;24370:18;24362:26;;24399:61;24457:1;24446:9;24442:17;24433:6;24399:61;;;24356:114;;;;;24477:294;;24613:2;24602:9;24598:18;24590:26;;24627:61;24685:1;24674:9;24670:17;24661:6;24627:61;;;24699:62;24757:2;24746:9;24742:18;24733:6;24699:62;;;24584:187;;;;;;24778:256;;24840:2;24834:9;24824:19;;24878:4;24870:6;24866:17;24977:6;24965:10;24962:22;24941:18;24929:10;24926:34;24923:62;24920:2;;;24998:1;24995;24988:12;24920:2;25018:10;25014:2;25007:22;24818:216;;;;;25041:233;;25198:18;25190:6;25187:30;25184:2;;;25230:1;25227;25220:12;25184:2;25259:4;25251:6;25247:17;25239:25;;25121:153;;;;25281:229;;25434:18;25426:6;25423:30;25420:2;;;25466:1;25463;25456:12;25420:2;25495:4;25487:6;25483:17;25475:25;;25357:153;;;;25517:258;;25660:18;25652:6;25649:30;25646:2;;;25692:1;25689;25682:12;25646:2;25736:4;25732:9;25725:4;25717:6;25713:17;25709:33;25701:41;;25765:4;25759;25755:15;25747:23;;25583:192;;;;25782:259;;25926:18;25918:6;25915:30;25912:2;;;25958:1;25955;25948:12;25912:2;26002:4;25998:9;25991:4;25983:6;25979:17;25975:33;25967:41;;26031:4;26025;26021:15;26013:23;;25849:192;;;;26050:108;;26145:6;26134:17;;26126:32;;;;26169:104;;26260:6;26249:17;;26241:32;;;;26282:96;;26370:3;26360:13;;26354:24;;;;26385:92;;26469:3;26459:13;;26453:24;;;;26484:91;;26564:5;26558:12;26548:22;;26542:33;;;;26582:92;;26663:5;26657:12;26647:22;;26641:33;;;;26682:120;;26791:4;26783:6;26779:17;26768:28;;26761:41;;;;26811:116;;26916:4;26908:6;26904:17;26893:28;;26886:41;;;;26935:105;;27004:31;27029:5;27004:31;;;26993:42;;26987:53;;;;27047:92;;27127:5;27120:13;27113:21;27102:32;;27096:43;;;;27146:128;;27226:42;27219:5;27215:54;27204:65;;27198:76;;;;27281:79;;27350:5;27339:16;;27333:27;;;;27367:105;;27436:31;27461:5;27436:31;;;27425:42;;27419:53;;;;27479:92;;27559:5;27552:13;27545:21;27534:32;;27528:43;;;;27578:79;;27647:5;27636:16;;27630:27;;;;27664:151;;27743:66;27736:5;27732:78;27721:89;;27715:100;;;;27822:79;;27891:5;27880:16;;27874:27;;;;27908:129;;27995:37;28026:5;27995:37;;;27982:50;;27976:61;;;;28044:121;;28123:37;28154:5;28123:37;;;28110:50;;28104:61;;;;28172:115;;28251:31;28276:5;28251:31;;;28238:44;;28232:55;;;;28295:145;28376:6;28371:3;28366;28353:30;28432:1;28423:6;28418:3;28414:16;28407:27;28346:94;;;;28449:268;28514:1;28521:101;28535:6;28532:1;28529:13;28521:101;;;28611:1;28606:3;28602:11;28596:18;28592:1;28587:3;28583:11;28576:39;28557:2;28554:1;28550:10;28545:15;;28521:101;;;28637:6;28634:1;28631:13;28628:2;;;28702:1;28693:6;28688:3;28684:16;28677:27;28628:2;28498:219;;;;;28725:97;;28813:2;28809:7;28804:2;28797:5;28793:14;28789:28;28779:38;;28773:49;;;",
  "source": "pragma solidity >=0.4.21 <0.6.0;\npragma experimental ABIEncoderV2;\n\nimport \"./ERC721Mintable.sol\";\nimport \"./Verifier.sol\";\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\n\ncontract SolnSquareVerifier is CustomERC721Token {\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n    Verifier private squareVerifier;\n\n// TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        uint256 index;\n        address ad;\n    }\n\n    uint256 private solutionIndex = 0;\n\n// TODO define an array of the above struct\n// TODO define a mapping to store unique solutions submitted\n    mapping(bytes32 => Solution) private solutions;\n\n// TODO Create an event to emit when a solution is added\n    event Solve(uint256 index, address ad);\n\n    constructor (address verifierAddress) public {\n        squareVerifier = Verifier(verifierAddress);\n    }\n\n// TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(bytes32 key, address to) internal {\n        solutionIndex = solutionIndex.add(1);\n        solutions[key] = Solution(solutionIndex, to);\n        emit Solve(solutionIndex, to);\n    }\n\n// TODO Create a function to mint new NFT only after the solution has been verified\n//  - make sure the solution is unique (has not been used before)\n//  - make sure you handle metadata as well as tokenSuplly\n    function mintNewNFT(address to, uint256 tokenId, Verifier.Proof memory proof, uint[1] memory input) public{\n        bytes32 key = keccak256(abi.encodePacked(proof.a.X, proof.a.Y, proof.b.X, proof.b.Y, proof.c.X, proof.c.Y, input));\n        require(solutions[key].ad == address(0), \"already used\");\n        require(squareVerifier.verifyTx(proof, input), \"not proved\");\n        addSolution(key, to);(key, to);\n        super.mint(to, tokenId);\n    }\n  \n}\n\n// contract Verifier {\n//     // using Pairing for *;\n//     // struct Proof {\n//     //     Pairing.G1Point a;\n//     //     Pairing.G2Point b;\n//     //     Pairing.G1Point c;\n//     // }\n//     function verifyTx(Proof memory proof, uint[1] memory input) public view returns (bool r);\n// }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "sourcePath": "/Users/ayakowatanabe/Documents/勉強/blockchain-udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/Users/ayakowatanabe/Documents/勉強/blockchain-udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7618
      ]
    },
    "id": 7619,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7473,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7474,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/Users/ayakowatanabe/Documents/勉強/blockchain-udacity/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7475,
        "nodeType": "ImportDirective",
        "scope": 7619,
        "sourceUnit": 1147,
        "src": "68:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ayakowatanabe/Documents/勉強/blockchain-udacity/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7476,
        "nodeType": "ImportDirective",
        "scope": 7619,
        "sourceUnit": 8525,
        "src": "99:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7477,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1146,
              "src": "259:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1146",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7478,
            "nodeType": "InheritanceSpecifier",
            "src": "259:17:3"
          }
        ],
        "contractDependencies": [
          700,
          1113,
          1146,
          998,
          220,
          174,
          86,
          7471
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7618,
        "linearizedBaseContracts": [
          7618,
          1146,
          1113,
          7471,
          998,
          700,
          220,
          174,
          86
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7480,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7618,
            "src": "390:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8524",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7479,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8524,
              "src": "390:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8524",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7485,
            "members": [
              {
                "constant": false,
                "id": 7482,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7485,
                "src": "524:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7481,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "524:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7484,
                "name": "ad",
                "nodeType": "VariableDeclaration",
                "scope": 7485,
                "src": "547:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7483,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "547:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7618,
            "src": "498:66:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7488,
            "name": "solutionIndex",
            "nodeType": "VariableDeclaration",
            "scope": 7618,
            "src": "570:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7486,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "570:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7487,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "602:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7492,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7618,
            "src": "715:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7485_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7491,
              "keyType": {
                "id": 7489,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "723:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "715:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7485_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7490,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7485,
                "src": "734:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7485_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7498,
            "name": "Solve",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7494,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "837:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7496,
                  "indexed": false,
                  "name": "ad",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "852:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "836:27:3"
            },
            "src": "825:39:3"
          },
          {
            "body": {
              "id": 7509,
              "nodeType": "Block",
              "src": "915:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7503,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7480,
                      "src": "925:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8524",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7505,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7500,
                          "src": "951:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7504,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8524,
                        "src": "942:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8524_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "942:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8524",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "925:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8524",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7508,
                  "nodeType": "ExpressionStatement",
                  "src": "925:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7510,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7500,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7510,
                  "src": "883:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "882:25:3"
            },
            "returnParameters": {
              "id": 7502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:3"
            },
            "scope": 7618,
            "src": "870:104:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7538,
              "nodeType": "Block",
              "src": "1114:146:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7517,
                      "name": "solutionIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7488,
                      "src": "1124:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 7520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1158:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7518,
                          "name": "solutionIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "1140:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8680,
                        "src": "1140:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1140:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1124:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7523,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7524,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7492,
                        "src": "1170:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7485_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7526,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7525,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7512,
                        "src": "1180:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1170:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7485_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7528,
                          "name": "solutionIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "1196:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7529,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7514,
                          "src": "1211:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7527,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7485,
                        "src": "1187:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7485_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1187:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7485_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1170:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7485_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7532,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:44:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7534,
                        "name": "solutionIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7488,
                        "src": "1235:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7535,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7514,
                        "src": "1250:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7533,
                      "name": "Solve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7498,
                      "src": "1229:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7537,
                  "nodeType": "EmitStatement",
                  "src": "1224:29:3"
                }
              ]
            },
            "documentation": null,
            "id": 7539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7512,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7539,
                  "src": "1080:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7514,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7539,
                  "src": "1093:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:25:3"
            },
            "returnParameters": {
              "id": 7516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1114:0:3"
            },
            "scope": 7618,
            "src": "1059:201:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7616,
              "nodeType": "Block",
              "src": "1581:340:3",
              "statements": [
                {
                  "assignments": [
                    7553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7553,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7616,
                      "src": "1591:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7552,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1591:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7578,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7557,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1632:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7558,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8209,
                              "src": "1632:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7626_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7559,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7623,
                            "src": "1632:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7560,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1643:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7561,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8209,
                              "src": "1643:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7626_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7562,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7625,
                            "src": "1643:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7563,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1654:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7564,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8211,
                              "src": "1654:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7635_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7565,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7630,
                            "src": "1654:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7566,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1665:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7567,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8211,
                              "src": "1665:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7635_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7634,
                            "src": "1665:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7569,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1676:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7570,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8213,
                              "src": "1676:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7626_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7571,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7623,
                            "src": "1676:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7572,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1687:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7573,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8213,
                              "src": "1687:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7626_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7574,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7625,
                            "src": "1687:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7575,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7549,
                            "src": "1698:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7555,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8738,
                            "src": "1615:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1615:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1615:89:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7554,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8745,
                      "src": "1605:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1605:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1591:114:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7580,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7492,
                              "src": "1723:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7485_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7582,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7581,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7553,
                              "src": "1733:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1723:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7485_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7583,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ad",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7484,
                          "src": "1723:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1752:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1744:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1744:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1723:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616c72656164792075736564",
                        "id": 7588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1756:14:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb64bb8dc4631e2229f11ea50de114c76de9a952c853139614d411f8661bb4c6",
                          "typeString": "literal_string \"already used\""
                        },
                        "value": "already used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb64bb8dc4631e2229f11ea50de114c76de9a952c853139614d411f8661bb4c6",
                          "typeString": "literal_string \"already used\""
                        }
                      ],
                      "id": 7579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8754,
                        8755
                      ],
                      "referencedDeclaration": 8755,
                      "src": "1715:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7590,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7594,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7545,
                            "src": "1813:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7595,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7549,
                            "src": "1820:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7592,
                            "name": "squareVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7480,
                            "src": "1789:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8524",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8523,
                          "src": "1789:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8214_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[1] memory) view external returns (bool)"
                          }
                        },
                        "id": 7596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1789:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f742070726f766564",
                        "id": 7597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:12:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1efe8d1ced6280651607591ecb495b5c5704cfa9caf7d30e9113179102cccc90",
                          "typeString": "literal_string \"not proved\""
                        },
                        "value": "not proved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1efe8d1ced6280651607591ecb495b5c5704cfa9caf7d30e9113179102cccc90",
                          "typeString": "literal_string \"not proved\""
                        }
                      ],
                      "id": 7591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8754,
                        8755
                      ],
                      "referencedDeclaration": 8755,
                      "src": "1781:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1781:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7599,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:60:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7601,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7553,
                        "src": "1863:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7541,
                        "src": "1868:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7600,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7539,
                      "src": "1851:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7604,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 7605,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7553,
                        "src": "1873:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7606,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7541,
                        "src": "1878:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 7607,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1872:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(bytes32,address)"
                    }
                  },
                  "id": 7608,
                  "nodeType": "ExpressionStatement",
                  "src": "1872:9:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7612,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7541,
                        "src": "1902:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7613,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7543,
                        "src": "1906:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7609,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8805,
                        "src": "1891:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7618",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1145,
                      "src": "1891:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7615,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7541,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7617,
                  "src": "1495:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1495:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7543,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7617,
                  "src": "1507:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7545,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7617,
                  "src": "1524:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7544,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8214,
                    "src": "1524:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8214_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7549,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7617,
                  "src": "1553:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7546,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1553:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7548,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1558:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1553:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1494:80:3"
            },
            "returnParameters": {
              "id": 7551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1581:0:3"
            },
            "scope": 7618,
            "src": "1475:446:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7619,
        "src": "228:1698:3"
      }
    ],
    "src": "0:2243:3"
  },
  "legacyAST": {
    "absolutePath": "/Users/ayakowatanabe/Documents/勉強/blockchain-udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7618
      ]
    },
    "id": 7619,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7473,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "id": 7474,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:33:3"
      },
      {
        "absolutePath": "/Users/ayakowatanabe/Documents/勉強/blockchain-udacity/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7475,
        "nodeType": "ImportDirective",
        "scope": 7619,
        "sourceUnit": 1147,
        "src": "68:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ayakowatanabe/Documents/勉強/blockchain-udacity/Blockchain-Capstone/eth-contracts/contracts/Verifier.sol",
        "file": "./Verifier.sol",
        "id": 7476,
        "nodeType": "ImportDirective",
        "scope": 7619,
        "sourceUnit": 8525,
        "src": "99:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7477,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1146,
              "src": "259:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1146",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7478,
            "nodeType": "InheritanceSpecifier",
            "src": "259:17:3"
          }
        ],
        "contractDependencies": [
          700,
          1113,
          1146,
          998,
          220,
          174,
          86,
          7471
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7618,
        "linearizedBaseContracts": [
          7618,
          1146,
          1113,
          7471,
          998,
          700,
          220,
          174,
          86
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 7480,
            "name": "squareVerifier",
            "nodeType": "VariableDeclaration",
            "scope": 7618,
            "src": "390:31:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Verifier_$8524",
              "typeString": "contract Verifier"
            },
            "typeName": {
              "contractScope": null,
              "id": 7479,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8524,
              "src": "390:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$8524",
                "typeString": "contract Verifier"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7485,
            "members": [
              {
                "constant": false,
                "id": 7482,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7485,
                "src": "524:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7481,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "524:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7484,
                "name": "ad",
                "nodeType": "VariableDeclaration",
                "scope": 7485,
                "src": "547:10:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7483,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "547:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7618,
            "src": "498:66:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7488,
            "name": "solutionIndex",
            "nodeType": "VariableDeclaration",
            "scope": 7618,
            "src": "570:33:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 7486,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "570:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "30",
              "id": 7487,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "602:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7492,
            "name": "solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7618,
            "src": "715:46:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7485_storage_$",
              "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7491,
              "keyType": {
                "id": 7489,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "723:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "715:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7485_storage_$",
                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7490,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7485,
                "src": "734:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7485_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7498,
            "name": "Solve",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7497,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7494,
                  "indexed": false,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "837:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7493,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "837:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7496,
                  "indexed": false,
                  "name": "ad",
                  "nodeType": "VariableDeclaration",
                  "scope": 7498,
                  "src": "852:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "852:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "836:27:3"
            },
            "src": "825:39:3"
          },
          {
            "body": {
              "id": 7509,
              "nodeType": "Block",
              "src": "915:59:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7503,
                      "name": "squareVerifier",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7480,
                      "src": "925:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8524",
                        "typeString": "contract Verifier"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7505,
                          "name": "verifierAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7500,
                          "src": "951:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7504,
                        "name": "Verifier",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8524,
                        "src": "942:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Verifier_$8524_$",
                          "typeString": "type(contract Verifier)"
                        }
                      },
                      "id": 7506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "942:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Verifier_$8524",
                        "typeString": "contract Verifier"
                      }
                    },
                    "src": "925:42:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Verifier_$8524",
                      "typeString": "contract Verifier"
                    }
                  },
                  "id": 7508,
                  "nodeType": "ExpressionStatement",
                  "src": "925:42:3"
                }
              ]
            },
            "documentation": null,
            "id": 7510,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7500,
                  "name": "verifierAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 7510,
                  "src": "883:23:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "882:25:3"
            },
            "returnParameters": {
              "id": 7502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "915:0:3"
            },
            "scope": 7618,
            "src": "870:104:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7538,
              "nodeType": "Block",
              "src": "1114:146:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7517,
                      "name": "solutionIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7488,
                      "src": "1124:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 7520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1158:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 7518,
                          "name": "solutionIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "1140:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 7519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 8680,
                        "src": "1140:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 7521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1140:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1124:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7523,
                  "nodeType": "ExpressionStatement",
                  "src": "1124:36:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7524,
                        "name": "solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7492,
                        "src": "1170:9:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7485_storage_$",
                          "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7526,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7525,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7512,
                        "src": "1180:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1170:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7485_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 7528,
                          "name": "solutionIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7488,
                          "src": "1196:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 7529,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7514,
                          "src": "1211:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 7527,
                        "name": "Solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7485,
                        "src": "1187:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Solution_$7485_storage_ptr_$",
                          "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                        }
                      },
                      "id": 7530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1187:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7485_memory",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1170:44:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7485_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7532,
                  "nodeType": "ExpressionStatement",
                  "src": "1170:44:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7534,
                        "name": "solutionIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7488,
                        "src": "1235:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7535,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7514,
                        "src": "1250:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7533,
                      "name": "Solve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7498,
                      "src": "1229:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address)"
                      }
                    },
                    "id": 7536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1229:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7537,
                  "nodeType": "EmitStatement",
                  "src": "1224:29:3"
                }
              ]
            },
            "documentation": null,
            "id": 7539,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7512,
                  "name": "key",
                  "nodeType": "VariableDeclaration",
                  "scope": 7539,
                  "src": "1080:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7511,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7514,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7539,
                  "src": "1093:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1093:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1079:25:3"
            },
            "returnParameters": {
              "id": 7516,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1114:0:3"
            },
            "scope": 7618,
            "src": "1059:201:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 7616,
              "nodeType": "Block",
              "src": "1581:340:3",
              "statements": [
                {
                  "assignments": [
                    7553
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7553,
                      "name": "key",
                      "nodeType": "VariableDeclaration",
                      "scope": 7616,
                      "src": "1591:11:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7552,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1591:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7578,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7557,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1632:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7558,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8209,
                              "src": "1632:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7626_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7559,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7623,
                            "src": "1632:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7560,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1643:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7561,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "a",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8209,
                              "src": "1643:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7626_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7562,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7625,
                            "src": "1643:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7563,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1654:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7564,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8211,
                              "src": "1654:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7635_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7565,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7630,
                            "src": "1654:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7566,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1665:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7567,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "b",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8211,
                              "src": "1665:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G2Point_$7635_memory",
                                "typeString": "struct Pairing.G2Point memory"
                              }
                            },
                            "id": 7568,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7634,
                            "src": "1665:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7569,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1676:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7570,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8213,
                              "src": "1676:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7626_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7571,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "X",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7623,
                            "src": "1676:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 7572,
                                "name": "proof",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 7545,
                                "src": "1687:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                                  "typeString": "struct Verifier.Proof memory"
                                }
                              },
                              "id": 7573,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "c",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 8213,
                              "src": "1687:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_G1Point_$7626_memory",
                                "typeString": "struct Pairing.G1Point memory"
                              }
                            },
                            "id": 7574,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Y",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7625,
                            "src": "1687:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7575,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7549,
                            "src": "1698:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7555,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8738,
                            "src": "1615:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1615:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1615:89:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7554,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8745,
                      "src": "1605:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1605:100:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1591:114:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 7587,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7580,
                              "name": "solutions",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7492,
                              "src": "1723:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Solution_$7485_storage_$",
                                "typeString": "mapping(bytes32 => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7582,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7581,
                              "name": "key",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7553,
                              "src": "1733:3:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1723:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7485_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7583,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ad",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7484,
                          "src": "1723:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 7585,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1752:1:3",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 7584,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1744:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 7586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1744:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1723:31:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "616c72656164792075736564",
                        "id": 7588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1756:14:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fb64bb8dc4631e2229f11ea50de114c76de9a952c853139614d411f8661bb4c6",
                          "typeString": "literal_string \"already used\""
                        },
                        "value": "already used"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fb64bb8dc4631e2229f11ea50de114c76de9a952c853139614d411f8661bb4c6",
                          "typeString": "literal_string \"already used\""
                        }
                      ],
                      "id": 7579,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8754,
                        8755
                      ],
                      "referencedDeclaration": 8755,
                      "src": "1715:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1715:56:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7590,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:56:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7594,
                            "name": "proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7545,
                            "src": "1813:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7595,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7549,
                            "src": "1820:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                              "typeString": "struct Verifier.Proof memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                              "typeString": "uint256[1] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7592,
                            "name": "squareVerifier",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7480,
                            "src": "1789:14:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Verifier_$8524",
                              "typeString": "contract Verifier"
                            }
                          },
                          "id": 7593,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyTx",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 8523,
                          "src": "1789:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_Proof_$8214_memory_ptr_$_t_array$_t_uint256_$1_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (struct Verifier.Proof memory,uint256[1] memory) view external returns (bool)"
                          }
                        },
                        "id": 7596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1789:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "6e6f742070726f766564",
                        "id": 7597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1828:12:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1efe8d1ced6280651607591ecb495b5c5704cfa9caf7d30e9113179102cccc90",
                          "typeString": "literal_string \"not proved\""
                        },
                        "value": "not proved"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1efe8d1ced6280651607591ecb495b5c5704cfa9caf7d30e9113179102cccc90",
                          "typeString": "literal_string \"not proved\""
                        }
                      ],
                      "id": 7591,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        8754,
                        8755
                      ],
                      "referencedDeclaration": 8755,
                      "src": "1781:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1781:60:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7599,
                  "nodeType": "ExpressionStatement",
                  "src": "1781:60:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7601,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7553,
                        "src": "1863:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7541,
                        "src": "1868:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 7600,
                      "name": "addSolution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7539,
                      "src": "1851:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 7603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1851:20:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7604,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:20:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 7605,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7553,
                        "src": "1873:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7606,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7541,
                        "src": "1878:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "id": 7607,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "1872:9:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bytes32_$_t_address_$",
                      "typeString": "tuple(bytes32,address)"
                    }
                  },
                  "id": 7608,
                  "nodeType": "ExpressionStatement",
                  "src": "1872:9:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7612,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7541,
                        "src": "1902:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7613,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7543,
                        "src": "1906:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7609,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8805,
                        "src": "1891:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_SolnSquareVerifier_$7618",
                          "typeString": "contract super SolnSquareVerifier"
                        }
                      },
                      "id": 7611,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1145,
                      "src": "1891:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 7614,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1891:23:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7615,
                  "nodeType": "ExpressionStatement",
                  "src": "1891:23:3"
                }
              ]
            },
            "documentation": null,
            "id": 7617,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNewNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7550,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7541,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7617,
                  "src": "1495:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7540,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1495:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7543,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7617,
                  "src": "1507:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7542,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7545,
                  "name": "proof",
                  "nodeType": "VariableDeclaration",
                  "scope": 7617,
                  "src": "1524:27:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$8214_memory_ptr",
                    "typeString": "struct Verifier.Proof"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 7544,
                    "name": "Verifier.Proof",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 8214,
                    "src": "1524:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$8214_storage_ptr",
                      "typeString": "struct Verifier.Proof"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7549,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7617,
                  "src": "1553:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$1_memory_ptr",
                    "typeString": "uint256[1]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7546,
                      "name": "uint",
                      "nodeType": "ElementaryTypeName",
                      "src": "1553:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7548,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 7547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1558:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": null,
                        "typeString": null
                      },
                      "value": "1"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1553:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$1_storage_ptr",
                      "typeString": "uint256[1]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1494:80:3"
            },
            "returnParameters": {
              "id": 7551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1581:0:3"
            },
            "scope": 7618,
            "src": "1475:446:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7619,
        "src": "228:1698:3"
      }
    ],
    "src": "0:2243:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.2+commit.1df8f40c.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x9161054DfEB7621cE4b13AB9dE3578332cF0E187",
      "transactionHash": "0x3e4e382f7e9f0a10a36bd227f1a6f99d826ec6f62da6ee418add15bf6dbe09cc"
    },
    "4447": {
      "events": {},
      "links": {},
      "address": "0x31dCA7Dc80616fD0750b932a85F68cBDaa3cc4e8",
      "transactionHash": "0x2b61278805873bd2e57fbb2c8c962ca24aef72637dcc998741d09cf7266878a0"
    }
  },
  "schemaVersion": "3.0.1",
  "updatedAt": "2022-08-26T16:38:34.203Z",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}